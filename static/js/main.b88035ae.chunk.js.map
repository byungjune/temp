{"version":3,"sources":["logo.svg","material_title_panel.js","sidebar_content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","root","fontFamily","fontWeight","header","backgroundColor","color","padding","fontSize","MaterialTitlePanel","props","style","title","children","rootStyle","Object","objectSpread","react_default","a","createElement","sidebar","width","height","sidebarLink","display","textDecoration","divider","margin","content","sidebarLinkImg","sidebarLinkTitle","SidebarContent","sidebarStyle","links","image","concat","process","image_on","link","map","item","key","href","className","backgroundImage","material_title_panel","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sidebarOpen","result","error","onSetSidebarOpen","bind","assertThisInitialized","responseGoogle","open","setState","response","_this2","console","log","axios","url","method","withCredentials","data","access_token","accessToken","then","res","JSON","stringify","catch","err","_this$state","sidebar_content","react_sidebar_esm","onSetOpen","background","google_login_default","clientId","buttonText","onSuccess","onFailure","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b88035ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nconst styles = {\n  root: {\n    fontFamily:\n      '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif',\n    fontWeight: 300\n  },\n  header: {\n    backgroundColor: \"#03a9f4\",\n    color: \"white\",\n    padding: \"16px\",\n    fontSize: \"1.5em\"\n  }\n};\n\nconst MaterialTitlePanel = props => {\n  const { style, title, children } = props;\n  const rootStyle = style\n    ? { ...styles.root, ...style }\n    : styles.root;\n\n  return (\n    <div style={rootStyle}>\n      <div style={styles.header}>{title}</div>\n      {children}\n    </div>\n  );\n};\n\nexport default MaterialTitlePanel;","import React from \"react\";\nimport MaterialTitlePanel from \"./material_title_panel\";\n\nconst styles = {\n  sidebar: {\n    width: 256,\n    height: \"100%\"\n  },\n  sidebarLink: {\n    display: \"block\",\n    color: \"#757575\",\n    textDecoration: \"none\"\n  },\n  divider: {\n    margin: \"8px 0\",\n    height: 1,\n    backgroundColor: \"#757575\"\n  },\n  content: {\n    padding: \"16px\",\n    height: \"100%\",\n    backgroundColor: \"white\"\n  },\n  sidebarLinkImg: {\n    width: 24,\n  },\n  sidebarLinkTitle: {\n    width: 52,\n    height: 20,\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#784eda',\n  },\n};\n\nconst SidebarContent = props => {\n  const { style } = props;\n  const sidebarStyle = style\n    ? { ...styles.sidebar, ...style }\n    : styles.sidebar;\n\n  \n  const menu = [\n    {\n      image: `${process.env.PUBLIC_URL}/static/image/global/ic-side-notice-nor@2x.png`,\n      image_on: `${process.env.PUBLIC_URL}/static/image/global/ic-side-notice-sel@2x.png`,\n      title: '공지사항',\n      link: '',\n    },\n    {\n      image: `${process.env.PUBLIC_URL}/static/image/global/ic-side-board-nor@2x.png`,\n      image_on: `${process.env.PUBLIC_URL}/static/image/global/ic-side-board-sel@2x.png`,\n      title: '게시판',\n      link: '',\n    },\n    {\n      image: `${process.env.PUBLIC_URL}/static/image/global/ic-side-search-nor@2x.png`,\n      image_on: `${process.env.PUBLIC_URL}/static/image/global/ic-side-search-sel@2x.png`,\n      title: '모집 중인 수업',\n      link: '',\n    },\n    {\n      image: `${process.env.PUBLIC_URL}/static/image/global/ic-side-class-nor@2x.png`,\n      image_on: `${process.env.PUBLIC_URL}/static/image/global/ic-side-class-sel@2x.png`,\n      title: '나의 수업',\n      link: '',\n    },\n    {\n      image: `${process.env.PUBLIC_URL}/static/image/global/ic-side-payment-nor@2x.png`,\n      image_on: `${process.env.PUBLIC_URL}/static/image/global/ic-side-payment-sel@2x.png`,\n      title: '강사비',\n      link: '',\n    },\n  ]\n\n  const links = menu.map(item => (\n    <a key={item.title} href=\"#\" style={styles.sidebarLink}>\n      <div className=\"sidebar-button-wrapper\" style={{ backgroundImage: `url(\"${item.image}\")`}}>\n        <span style={styles.sidebarLinkTitle}>{item.title}</span>\n      </div>\n    </a>\n    )\n  )\n    \n  return (\n    <MaterialTitlePanel title=\"Menu\" style={sidebarStyle}>\n      <div style={styles.content}>\n        <a href=\"index.html\" style={styles.sidebarLink}>\n          Home\n        </a>\n        <a href=\"responsive_example.html\" style={styles.sidebarLink}>\n          Responsive Example\n        </a>\n        <div style={styles.divider} />\n        {links}\n      </div>\n    </MaterialTitlePanel>\n  );\n};\n\nexport default SidebarContent;","import React, { Component } from 'react';\nimport Sidebar from \"react-sidebar\";\nimport GoogleLogin from 'react-google-login';\nimport axios from 'axios';\n\nimport SidebarContent from \"./sidebar_content\";\nimport logo from './logo.svg';\nimport './styles/core.scss';\n\nconst responseGoogle = (response) => {\n  console.log(\"responseGoogle : \", response);\n  axios({\n    url: 'http://ec2-13-125-107-36.ap-northeast-2.compute.amazonaws.com/rest-auth/google',\n    method: 'POST',\n    withCredentials: false,\n    data: {\n     access_token: response.accessToken\n    }\n  }).then()\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarOpen: false,\n      result: '',\n      error: '',\n    };\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n    this.responseGoogle = this.responseGoogle.bind(this);\n  }\n\n  componentDidMount() {\n  //   axios({\n  //     // url: 'http://127.0.0.1:8000/api/v1/community',\n  //     url: 'http://ec2-13-125-107-36.ap-northeast-2.compute.amazonaws.com/api/v1/community',\n  //     method: 'GET',\n  //     withCredentials: false,\n  //     data: {\n  //      title: \"test\",\n  //      content: \"test_content\",\n  //      tag: \"청년, 강사, 게시판\",\n  //      image: 0\n  //     }\n  //   })\n  //   .then(response => {\n  //     // handle success\n  //     console.log(response);\n  //   })\n  //   .catch(error => {\n  //     // handle error\n  //     console.log(error);\n  //   })\n  //   .then(() => {\n  //     // always executed\n  //   });\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n\n  responseGoogle(response) {\n    const { error } = this.state;\n    console.log(\"responseGoogle : \", response);\n    axios({\n      url: 'http://ec2-13-125-107-36.ap-northeast-2.compute.amazonaws.com/rest-auth/google',\n      method: 'POST', \n      withCredentials: false,\n      data: {\n       access_token: response.accessToken\n      }\n    }).then(res => {\n      console.log(res);\n      this.setState({result: JSON.stringify(res)})\n    }).catch(err => {\n      console.log(err)\n      this.setState({error: JSON.stringify(err)})\n    })\n    console.log(error)\n  }\n\n  render() {\n    const { sidebarOpen, result, error } = this.state;\n    const sidebar = <SidebarContent />;\n    return (\n      <Sidebar\n        sidebar={sidebar}\n        open={sidebarOpen}\n        onSetOpen={this.onSetSidebarOpen}\n        styles={{ sidebar: { background: \"white\" } }}\n      >\n        <div className=\"App\">\n          <GoogleLogin\n            clientId=\"407625889267-170lt8oq7h7me2je4gu9drs85jeran8e.apps.googleusercontent.com\"\n            buttonText=\"Login\"\n            onSuccess={this.responseGoogle}\n            onFailure={this.responseGoogle}\n          />\n          {\n            /*\n            <header className=\"App-header\">\n            \n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Edit \n                <code>src/App.js</code> \n                and save to reload.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n              <button type=\"button\" onClick={() => this.onSetSidebarOpen(!sidebarOpen)}>\n                Open sidebar\n              </button>\n              </header>\n            */\n          }\n        </div>\n        <div>\n          응답 : \n          { result }\n        </div>\n        <div>\n          에러 : \n          { error }\n        </div>\n      </Sidebar>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}